<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yoxnet.log.dao.LogMapper" >
  <resultMap id="BaseResultMap" type="com.yoxnet.log.bean.Log" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="log_time" property="logTime" jdbcType="TIMESTAMP" />
    <result column="log_title" property="logTitle" jdbcType="VARCHAR" />
    <result column="task_name" property="taskName" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.yoxnet.log.bean.Log" extends="BaseResultMap" >
    <result column="log_content" property="logContent" jdbcType="LONGVARCHAR" />
  </resultMap>
  <resultMap id="BaseLog" type="com.yoxnet.log.bean.Log" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="log_time" property="logTime" jdbcType="TIMESTAMP" />
    <result column="log_title" property="logTitle" jdbcType="VARCHAR" />
    <result column="task_name" property="taskName" jdbcType="VARCHAR" />
    <result column="log_content" property="logContent" jdbcType="VARCHAR" />
  </resultMap>

  <insert id="inserterster" parameterType="com.yoxnet.log.bean.Log" >
    insert into data_log (id, log_time, log_title,
    task_name, log_content)
    values (#{id,jdbcType=VARCHAR}, #{logTime,jdbcType=TIMESTAMP}, #{logTitle,jdbcType=VARCHAR},
    #{taskName,jdbcType=VARCHAR}, #{logContent,jdbcType=LONGVARCHAR})
  </insert>

  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <if test="fields == null" >
      id, log_time, log_title, task_name
    </if>
    <if test="fields != null" >
      ${fields}
    </if>
  </sql>
  <sql id="Blob_Column_List" >
    log_content
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.yoxnet.log.bean.LogExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from data_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yoxnet.log.bean.LogExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from data_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    id,log_time,log_title,task_name,log_content
    ,
    <include refid="Blob_Column_List" />
    from data_log
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from data_log
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.yoxnet.log.bean.LogExample" >
    delete from data_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yoxnet.log.bean.Log" >
    insert into data_log (id, log_time, log_title,
      task_name, log_content)
    values (#{id,jdbcType=VARCHAR}, #{logTime,jdbcType=TIMESTAMP}, #{logTitle,jdbcType=VARCHAR},
      #{taskName,jdbcType=VARCHAR}, #{logContent,jdbcType=LONGVARCHAR})
  </insert>


  <insert id="insertSelective" parameterType="com.yoxnet.log.bean.Log" >
    insert into data_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="logTime != null" >
        log_time,
      </if>
      <if test="logTitle != null" >
        log_title,
      </if>
      <if test="taskName != null" >
        task_name,
      </if>
      <if test="logContent != null" >
        log_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="logTime != null" >
        #{logTime,jdbcType=TIMESTAMP},
      </if>
      <if test="logTitle != null" >
        #{logTitle,jdbcType=VARCHAR},
      </if>
      <if test="taskName != null" >
        #{taskName,jdbcType=VARCHAR},
      </if>
      <if test="logContent != null" >
        #{logContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>





  <select id="countByExample" parameterType="com.yoxnet.log.bean.LogExample" resultType="java.lang.Integer" >
    select count(*) from data_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update data_log
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.logTime != null" >
        log_time = #{record.logTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.logTitle != null" >
        log_title = #{record.logTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.taskName != null" >
        task_name = #{record.taskName,jdbcType=VARCHAR},
      </if>
      <if test="record.logContent != null" >
        log_content = #{record.logContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update data_log
    set id = #{record.id,jdbcType=VARCHAR},
      log_time = #{record.logTime,jdbcType=TIMESTAMP},
      log_title = #{record.logTitle,jdbcType=VARCHAR},
      task_name = #{record.taskName,jdbcType=VARCHAR},
      log_content = #{record.logContent,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update data_log
    set id = #{record.id,jdbcType=VARCHAR},
      log_time = #{record.logTime,jdbcType=TIMESTAMP},
      log_title = #{record.logTitle,jdbcType=VARCHAR},
      task_name = #{record.taskName,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yoxnet.log.bean.Log" >
    update data_log
    <set >
      <if test="logTime != null" >
        log_time = #{logTime,jdbcType=TIMESTAMP},
      </if>
      <if test="logTitle != null" >
        log_title = #{logTitle,jdbcType=VARCHAR},
      </if>
      <if test="taskName != null" >
        task_name = #{taskName,jdbcType=VARCHAR},
      </if>
      <if test="logContent != null" >
        log_content = #{logContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.yoxnet.log.bean.Log" >
    update data_log
    set log_time = #{logTime,jdbcType=TIMESTAMP},
      log_title = #{logTitle,jdbcType=VARCHAR},
      task_name = #{taskName,jdbcType=VARCHAR},
      log_content = #{logContent,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yoxnet.log.bean.Log" >
    update data_log
    set log_time = #{logTime,jdbcType=TIMESTAMP},
      log_title = #{logTitle,jdbcType=VARCHAR},
      task_name = #{taskName,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  
  <select id="selectAllLogAndOwner"  resultMap="BaseLog">
  	select l.* from data_log l 
  	left join sys_role r on l.task_name=r.task_name 
  	where l.task_name is null or l.task_name='' or r.name=#{username} 
  	order by l.log_time desc limit #{page},#{size}
  </select>
  
  
  
  
</mapper>